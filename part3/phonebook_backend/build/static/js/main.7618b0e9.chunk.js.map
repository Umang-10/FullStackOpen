{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newObject","post","id","put","object","delete","Notification","message","className","ErrorNotification","Name","person","handleDelete","name","number","onClick","Filter","handleChange","onChange","PersonForm","handleNameChange","handleNumberChange","addName","onSubmit","type","Persons","personToShow","setPersons","setErrorMessage","map","find","n","deletedName","console","log","window","confirm","dirService","returnedName","catch","error","setTimeout","filter","handleDeletion","App","useState","persons","newName","setNewName","newNumber","setNewNumber","personMatch","setPersonMatch","successMessage","setSuccessMessage","errorMessage","useEffect","initialPersons","toLowerCase","event","target","value","preventDefault","nameObject","length","includes","changedName","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7618b0e9.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseURL = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseURL, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id, object) => {\r\n    const request = axios.delete(`${baseURL}/${id}`, object)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, del}","import React, {useState,useHooks, useEffect} from 'react'\nimport axios from 'axios'\nimport dirService from './services/persons'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='success'>\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\n\nconst Name = ({person, handleDelete}) => {\n  return (\n      <div key={person.id}>\n        {person.name} {person.number}\n        <button onClick={handleDelete}>Delete</button>\n      </div>\n  )\n}\n\nconst Filter = ({handleChange}) => {\n    return(\n      <div>\n        Filter shown with: <input onChange={handleChange}/>\n      </div>\n    )\n}\n\nconst PersonForm = ({handleNameChange, handleNumberChange, addName}) => {\n    return(\n      <div>\n        <form onSubmit={addName}>\n          <div>\n            Name: <input onChange={handleNameChange}/>\n          </div>\n          <div>\n            Number: <input onChange={handleNumberChange}/>\n          </div>\n          <div>\n            <button type='submit' >Add</button>\n          </div>\n        </form>\n      </div>  \n)}\n\nconst Persons = ({personToShow , setPersons, setErrorMessage}) => {\n  const handleDeletion = (id) => {\n    const person = personToShow.find(n => n.id === id)\n    const deletedName = {...person}\n    console.log(deletedName)\n\n    if (window.confirm('Do You Really want to delete this name?')) {\n      dirService.del(id, deletedName).then(returnedName => \n        setPersons(personToShow.map(name => name.id !== id))\n      )\n      .catch(error => {\n        setErrorMessage(\n          `Information about ${person.name} has already been removed from the server.`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n        setPersons(personToShow.filter(n => n.id !== id))\n      })\n    }\n  }\n\n \n  return (\n    <div>\n      {personToShow.map(person => \n      <Name person={person} handleDelete={() => handleDeletion(person.id)}/>  \n  )}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [personMatch, setPersonMatch] = useState('')\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    dirService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  })\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleMatchChange = (event) => {\n    setPersonMatch(event.target.value)\n  }\n\n  \n\n  const personToShow = personMatch\n    ? persons.filter(person => person.name.toLowerCase() === personMatch.toLowerCase())\n    : persons\n\n  const addName = (event) => {\n    event.preventDefault()\n    \n    const nameObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1\n    }\n    \n    if (persons.map(name=> name.name).includes(nameObject.name)) {\n      window.confirm(`${nameObject.name} is already in the PhoneBook, replace the old number with new one?`)\n      const name = persons.find(n => n.name === nameObject.name)\n      const changedName = {...name, number: nameObject.number}\n\n      dirService\n        .update(name.id, changedName).then(returnedName => {\n          setPersons(persons.map(name => name.name !== nameObject.name ? name : returnedName))\n        })\n        setSuccessMessage(\n          `Updated ${nameObject.name}`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 4000)\n    }\n    // (persons.indexOf(nameObject.name) === -1)\n    else{\n      dirService\n        .create(nameObject)\n        .then(returnedName => {\n          setPersons(persons.concat(nameObject))\n          setNewName('')\n        })\n      setSuccessMessage(\n        `Added ${nameObject.name}`\n      )\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 3000)\n    }\n    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage}/>\n      <ErrorNotification message={errorMessage}/>\n      <Filter handleChange={handleMatchChange}/>\n      <h2>Add a New</h2>\n      <PersonForm \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange}\n        addName={addName}\n      />\n      <h2>Numbers</h2>\n      <Persons \n        personToShow={personToShow} \n        setPersons={setPersons}\n        setErrorMessage={setErrorMessage}  \n      />\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}